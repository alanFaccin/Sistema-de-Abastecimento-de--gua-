Microchip MPLAB XC8 Compiler V1.32 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.32\dat\en_msgs.txt -cs \
  -h+dist/default/production\BOIA.X.production.sym \
  --cmf=dist/default/production\BOIA.X.production.cmf -z -Q16F877A \
  -oC:\Users\DIOVAN~1\AppData\Local\Temp\s4eg.6 \
  -Mdist/default/production/BOIA.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACONST=00h-0FFhx32 -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -AENTRY=00h-0FFhx32 -ASTRING=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\DIOVAN~1\AppData\Local\Temp\s4eg.obj \
  dist/default/production\BOIA.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\DIOVAN~1\AppData\Local\Temp\s4eg.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\BOIA.X.production.obj
                cinit                                15       15       20        8       0
                intentry                              4        4        E        8       0
                text44                             1641     1641        8     2C82       0
                text43                             1741     1741       23     2E82       0
                text42                             16CD     16CD       1B     2D9A       0
                text41                              796      796       68        8       0
                text40                             1720     1720       21     2E40       0
                text39                              633      633       B8        8       0
                text38                              B54      B54       5D     16A8       0
                text37                              4A6      4A6       D3        8       0
                text36                             1649     1649        8     2C92       0
                text35                              39F      39F      107        8       0
                text34                             16E8     16E8       1C     2DD0       0
                text33                              E40      E40       8E     1C80       0
                text32                             17AA     17AA       2B     2F54       0
                text31                              BB1      BB1       5E     1762       0
                text30                              AAD      AAD       4E     155A       0
                text29                             1764     1764       23     2EC8       0
                text28                             1671     1671        E     2CE2       0
                text27                               35       35      23C        8       0
                text26                              579      579       BA        8       0
                text25                              927      927       39     124E       0
                text24                             17D5     17D5       2B     2FAA       0
                text23                             16B3     16B3       1A     2D66       0
                text22                              960      960       3B     12C0       0
                text21                             1787     1787       23     2F0E       0
                text20                              A61      A61       4C     14C2       0
                text19                              F5D      F5D       A3     1EBA       0
                text18                              DC7      DC7       79     1B8E       0
                text17                              99B      99B       3F     1336       0
                text16                              271      271      12E        8       0
                text15                              894      894       2D     1128       0
                text14                             1664     1664        D     2CC8       0
                text13                              6EB      6EB       AB        8       0
                text12                              CDB      CDB       74     19B6       0
                text11                             16A0     16A0       13     2D40       0
                text10                              AFB      AFB       59     15F6       0
                text9                               8F2      8F2       35     11E4       0
                text8                               9DA      9DA       40     13B4       0
                text7                               ECE      ECE       8F     1D9C       0
                text6                               C0F      C0F       66     181E       0
                text5                               C75      C75       66     18EA       0
                text4                              1704     1704       1C     2E08       0
                text3                               A1A      A1A       47     1434       0
                text2                               8C1      8C1       31     1182       0
                text1                               D4F      D4F       78     1A9E       0
                maintext                           1659     1659        B     2CB2       0
                cstackBANK0                          20       20       47       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       1E       A0       1
                inittext                           168F     168F       11     2D1E       0
                clrtext                            1651     1651        8     2CA2       0
                dataBANK1                            D5       D5       10       A0       1
                bssBANK1                             BE       BE       17       A0       1
                bssBANK0                             67       67        8       20       1
                strings                             800      800       8E     1000       0
                idataBANK1                         167F     167F       10     2CFE       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       20         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text44                             1641     1641        8         0
                text43                             1741     1741       23         0
                text42                             16CD     16CD       1B         0
                text41                              796      796       68         0
                text40                             1720     1720       21         0
                text39                              633      633       B8         0
                text38                              B54      B54       5D         0
                text37                              4A6      4A6       D3         0
                text36                             1649     1649        8         0
                text35                              39F      39F      107         0
                text34                             16E8     16E8       1C         0
                text33                              E40      E40       8E         0
                text32                             17AA     17AA       2B         0
                text31                              BB1      BB1       5E         0
                text30                              AAD      AAD       4E         0
                text29                             1764     1764       23         0
                text28                             1671     1671        E         0
                text27                               35       35      23C         0
                text26                              579      579       BA         0
                text25                              927      927       39         0
                text24                             17D5     17D5       2B         0
                text23                             16B3     16B3       1A         0
                text22                              960      960       3B         0
                text21                             1787     1787       23         0
                text20                              A61      A61       4C         0
                text19                              F5D      F5D       A3         0
                text18                              DC7      DC7       79         0
                text17                              99B      99B       3F         0
                text16                              271      271      12E         0
                text15                              894      894       2D         0
                text14                             1664     1664        D         0
                text13                              6EB      6EB       AB         0
                text12                              CDB      CDB       74         0
                text11                             16A0     16A0       13         0
                text10                              AFB      AFB       59         0
                text9                               8F2      8F2       35         0
                text8                               9DA      9DA       40         0
                text7                               ECE      ECE       8F         0
                text6                               C0F      C0F       66         0
                text5                               C75      C75       66         0
                text4                              1704     1704       1C         0
                text3                               A1A      A1A       47         0
                text2                               8C1      8C1       31         0
                text1                               D4F      D4F       78         0
                maintext                           1659     1659        B         0
                inittext                           168F     168F       11         0
                clrtext                            1651     1651        8         0
                idataBANK1                         167F     167F       10         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         
                strings                             800      800       8E         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       47         1
                bssBANK0                             67       67        8         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       1E         1
                dataBANK1                            D5       D5       10         1
                bssBANK1                             BE       BE       17         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007FA  0007FE         8       0  CODE        2
                cstackBANK0                    000020  00004F  00006F        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000045  0000E5        A0       1  BANK1       1
                strings                        000800  00008E  00088E      1000       0  STRING      2
                text15                         000894  00002D  0008C1      1128       0  CODE        2
                text2                          0008C1  000031  0008F2      1182       0  CODE        2
                text9                          0008F2  000035  000927      11E4       0  CODE        2
                text25                         000927  000039  000960      124E       0  CODE        2
                text22                         000960  00003B  00099B      12C0       0  CODE        2
                text17                         00099B  00003F  0009DA      1336       0  CODE        2
                text8                          0009DA  000040  000A1A      13B4       0  CODE        2
                text3                          000A1A  000047  000A61      1434       0  CODE        2
                text20                         000A61  00004C  000AAD      14C2       0  CODE        2
                text30                         000AAD  00004E  000AFB      155A       0  CODE        2
                text10                         000AFB  000059  000B54      15F6       0  CODE        2
                text38                         000B54  00005D  000BB1      16A8       0  CODE        2
                text31                         000BB1  00005E  000C0F      1762       0  CODE        2
                text6                          000C0F  000066  000C75      181E       0  CODE        2
                text5                          000C75  000066  000CDB      18EA       0  CODE        2
                text12                         000CDB  000074  000D4F      19B6       0  CODE        2
                text1                          000D4F  000078  000DC7      1A9E       0  CODE        2
                text18                         000DC7  000079  000E40      1B8E       0  CODE        2
                text33                         000E40  00008E  000ECE      1C80       0  CODE        2
                text7                          000ECE  00008F  000F5D      1D9C       0  CODE        2
                text19                         000F5D  0000A3  001000      1EBA       0  CODE        2
                text44                         001641  000008  001649      2C82       0  CODE        2
                text36                         001649  000008  001651      2C92       0  CODE        2
                clrtext                        001651  000008  001659      2CA2       0  CODE        2
                maintext                       001659  00000B  001664      2CB2       0  CODE        2
                text14                         001664  00000D  001671      2CC8       0  CODE        2
                text28                         001671  00000E  00167F      2CE2       0  CODE        2
                idataBANK1                     00167F  000010  00168F      2CFE       0  CODE        2
                inittext                       00168F  000011  0016A0      2D1E       0  CODE        2
                text11                         0016A0  000013  0016B3      2D40       0  CODE        2
                text23                         0016B3  00001A  0016CD      2D66       0  CODE        2
                text42                         0016CD  00001B  0016E8      2D9A       0  CODE        2
                text34                         0016E8  00001C  001704      2DD0       0  CODE        2
                text4                          001704  00001C  001720      2E08       0  CODE        2
                text40                         001720  000021  001741      2E40       0  CODE        2
                text43                         001741  000023  001764      2E82       0  CODE        2
                text29                         001764  000023  001787      2EC8       0  CODE        2
                text21                         001787  000023  0017AA      2F0E       0  CODE        2
                text32                         0017AA  00002B  0017D5      2F54       0  CODE        2
                text24                         0017D5  00002B  001800      2FAA       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006F-006F              1           1
        BANK1            00E5-00EF              B           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         07FE-07FF              2
                         088E-0893              6
                         1000-1640            641
                         1800-1FFF            800
        CONST            0003-0003              1           2
                         07FE-07FF              2
                         088E-0893              6
                         1000-1640            100
                         1800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         07FE-07FF              2
                         088E-0893              6
                         1000-1640            100
                         1800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              006F-006F              1           1
                         00E5-00EF              B
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         07FE-07FF              2
                         088E-0893              6
                         1000-1640            641
                         1800-1FFF            800
        STRING           0003-0003              1           2
                         07FE-07FF              2
                         088E-0893              6
                         1000-1640            100
                         1800-1FFF            100

                                  Symbol Table

?___aldiv                      cstackBANK1  00A0
?___awtoft                     cstackCOMMON 0078
?___ftadd                      cstackCOMMON 0078
?___ftdiv                      cstackBANK0  0030
?___ftmul                      cstackBANK0  0020
?___ftneg                      cstackCOMMON 0070
?___ftpack                     cstackCOMMON 0070
?___ftsub                      cstackBANK0  0027
?___fttol                      cstackBANK0  0030
?___lldiv                      cstackCOMMON 0070
?___llmod                      cstackBANK0  0020
?___lltoft                     cstackCOMMON 0078
?___wmul                       cstackCOMMON 0070
?_sprintf                      cstackBANK0  002A
ADCRead@ch                     cstackBANK1  00A0
Ativar@comando                 cstackBANK1  00A2
ISR@buf                        cstackBANK0  0058
ISR@input                      cstackBANK0  0060
ISR@input2                     cstackBANK0  0063
ISR@per                        cstackBANK0  0066
ISR@pre                        cstackBANK0  0059
ISR@preint                     cstackBANK0  005C
ISR@status                     cstackBANK0  005E
USARTInit@BR                   cstackBANK1  00B9
USARTInit@BaudRate             cstackBANK1  00AF
USARTInit@Mode                 cstackBANK1  00B3
USARTReceiveChar@USARTData     cstackCOMMON 0074
USARTWriteChar@USARTData       cstackBANK1  00A0
USARTWriteString@str           cstackCOMMON 0071
_ADCInit                       text11       16A0
_ADCON0bits                    (abs)        001F
_ADCON1bits                    (abs)        009F
_ADCRead                       text15       0894
_ADCResult                     bssBANK0     0067
_ADRESH                        (abs)        001E
_ADRESL                        (abs)        009E
_Ativar                        text13       06EB
_DESLIGAR                      strings      083C
_DESLIGAR_BOMBA                strings      083D
_DESLIGAR_MOTOR                strings      083E
_INTCONbits                    (abs)        000B
_ISR                           text16       0271
_LCDClear                      text8        09DA
_LCD_INIT_STRING               strings      0838
_LIGAR                         strings      083F
_LIGAR_BOMBA                   strings      0840
_LIGAR_MOTOR                   strings      0841
_OERR                          (abs)        00C1
_PIE1bits                      (abs)        008C
_PIR1bits                      (abs)        000C
_PORTAbits                     (abs)        0005
_PORTBbits                     (abs)        0006
_PORTCbits                     (abs)        0007
_PORTDbits                     (abs)        0008
_RCREG                         (abs)        001A
_RCSTAbits                     (abs)        0018
_SPBRG                         (abs)        0099
_TRISA                         (abs)        0085
_TRISBbits                     (abs)        0086
_TRISCbits                     (abs)        0087
_TRISDbits                     (abs)        0088
_TXREG                         (abs)        0019
_TXSTAbits                     (abs)        0098
_USARTInit                     text6        0C0F
_USARTReceiveChar              text42       16CD
_USARTWriteChar                text14       1664
_USARTWriteString              text43       1741
__CFG_BOREN$ON                 (abs)        0000
__CFG_CP$OFF                   (abs)        0000
__CFG_CPD$OFF                  (abs)        0000
__CFG_FOSC$HS                  (abs)        0000
__CFG_LVP$OFF                  (abs)        0000
__CFG_PWRTE$ON                 (abs)        0000
__CFG_WDTE$OFF                 (abs)        0000
__CFG_WRT$OFF                  (abs)        0000
__Habs1                        abs1         0000
__Hbank0                       bank0        0000
__Hbank1                       bank1        0000
__Hbank2                       bank2        0000
__Hbank3                       bank3        0000
__HbssBANK0                    bssBANK0     0000
__HbssBANK1                    bssBANK1     0000
__Hcinit                       cinit        0035
__Hclrtext                     clrtext      0000
__Hcode                        code         0000
__Hcommon                      common       0000
__Hconfig                      config       2008
__HcstackBANK0                 cstackBANK0  0000
__HcstackBANK1                 cstackBANK1  0000
__HcstackCOMMON                cstackCOMMON 0000
__HdataBANK1                   dataBANK1    0000
__Heeprom_data                 eeprom_data  0000
__Hend_init                    end_init     0015
__Hfunctab                     functab      0000
__HidataBANK1                  idataBANK1   0000
__Hidloc                       idloc        0000
__Hinit                        init         0012
__Hinittext                    inittext     0000
__Hintentry                    intentry     0012
__Hmaintext                    maintext     0000
__Hpowerup                     powerup      0000
__Hram                         ram          0000
__Hreset_vec                   reset_vec    0003
__Hsfr0                        sfr0         0000
__Hsfr1                        sfr1         0000
__Hsfr2                        sfr2         0000
__Hsfr3                        sfr3         0000
__Hspace_0                     (abs)        2008
__Hspace_1                     (abs)        00E5
__Hspace_2                     (abs)        0000
__Hspace_3                     (abs)        0000
__Hstack                       stack        0000
__Hstrings                     strings      0000
__Htext                        text         0000
__Labs1                        abs1         0000
__Lbank0                       bank0        0000
__Lbank1                       bank1        0000
__Lbank2                       bank2        0000
__Lbank3                       bank3        0000
__LbssBANK0                    bssBANK0     0000
__LbssBANK1                    bssBANK1     0000
__Lcinit                       cinit        0015
__Lclrtext                     clrtext      0000
__Lcode                        code         0000
__Lcommon                      common       0000
__Lconfig                      config       2007
__LcstackBANK0                 cstackBANK0  0000
__LcstackBANK1                 cstackBANK1  0000
__LcstackCOMMON                cstackCOMMON 0000
__LdataBANK1                   dataBANK1    0000
__Leeprom_data                 eeprom_data  0000
__Lend_init                    end_init     0012
__Lfunctab                     functab      0000
__LidataBANK1                  idataBANK1   0000
__Lidloc                       idloc        0000
__Linit                        init         0012
__Linittext                    inittext     0000
__Lintentry                    intentry     0004
__Lmaintext                    maintext     0000
__Lpowerup                     powerup      0000
__Lram                         ram          0000
__Lreset_vec                   reset_vec    0000
__Lsfr0                        sfr0         0000
__Lsfr1                        sfr1         0000
__Lsfr2                        sfr2         0000
__Lsfr3                        sfr3         0000
__Lspace_0                     (abs)        0000
__Lspace_1                     (abs)        0000
__Lspace_2                     (abs)        0000
__Lspace_3                     (abs)        0000
__Lstack                       stack        0000
__Lstrings                     strings      0000
__Ltext                        text         0000
__S0                           (abs)        2008
__S1                           (abs)        00E5
__S2                           (abs)        0000
__S3                           (abs)        0000
___aldiv                       text7        0ECE
___aldiv@counter               cstackBANK1  00A9
___aldiv@dividend              cstackBANK1  00A4
___aldiv@divisor               cstackBANK1  00A0
___aldiv@quotient              cstackBANK1  00AB
___aldiv@sign                  cstackBANK1  00AA
___awtoft                      text40       1720
___awtoft@c                    cstackCOMMON 0078
___awtoft@sign                 cstackCOMMON 007D
___ftadd                       text35       039F
___ftadd@exp1                  cstackBANK0  0026
___ftadd@exp2                  cstackBANK0  0025
___ftadd@f1                    cstackCOMMON 0078
___ftadd@f2                    cstackCOMMON 007B
___ftadd@sign                  cstackBANK0  0024
___ftdiv                       text39       0633
___ftdiv@cntr                  cstackBANK0  003A
___ftdiv@exp                   cstackBANK0  003E
___ftdiv@f1                    cstackBANK0  0033
___ftdiv@f2                    cstackBANK0  0030
___ftdiv@f3                    cstackBANK0  003B
___ftdiv@sign                  cstackBANK0  003F
___ftge                        text38       0B54
___ftge@ff1                    cstackCOMMON 0070
___ftge@ff2                    cstackCOMMON 0073
___ftmul                       text37       04A6
___ftmul@cntr                  cstackBANK0  002E
___ftmul@exp                   cstackBANK0  002A
___ftmul@f1                    cstackBANK0  0020
___ftmul@f2                    cstackBANK0  0023
___ftmul@f3_as_product         cstackBANK0  002B
___ftmul@sign                  cstackBANK0  002F
___ftneg                       text36       1649
___ftneg@f1                    cstackCOMMON 0070
___ftpack                      text41       0796
___ftpack@arg                  cstackCOMMON 0070
___ftpack@exp                  cstackCOMMON 0073
___ftpack@sign                 cstackCOMMON 0074
___ftsub                       text34       16E8
___ftsub@f1                    cstackBANK0  002A
___ftsub@f2                    cstackBANK0  0027
___fttol                       text33       0E40
___fttol@exp1                  cstackBANK0  003D
___fttol@f1                    cstackBANK0  0030
___fttol@lval                  cstackBANK0  0039
___fttol@sign1                 cstackBANK0  0038
___int_sp                      stack        0000
___latbits                     (abs)        0002
___lldiv                       text31       0BB1
___lldiv@counter               cstackCOMMON 007D
___lldiv@dividend              cstackCOMMON 0074
___lldiv@divisor               cstackCOMMON 0070
___lldiv@quotient              cstackCOMMON 0079
___llmod                       text30       0AAD
___llmod@counter               cstackBANK0  0029
___llmod@dividend              cstackBANK0  0024
___llmod@divisor               cstackBANK0  0020
___lltoft                      text32       17AA
___lltoft@c                    cstackCOMMON 0078
___lltoft@exp                  cstackCOMMON 007D
___sp                          stack        0000
___wmul                        text29       1764
___wmul@multiplicand           cstackCOMMON 0072
___wmul@multiplier             cstackCOMMON 0070
___wmul@product                cstackCOMMON 0074
__end_of_ADCInit               text11       16B3
__end_of_ADCRead               text15       08C1
__end_of_Ativar                text13       0796
__end_of_DESLIGAR              strings      083D
__end_of_DESLIGAR_BOMBA        strings      083E
__end_of_DESLIGAR_MOTOR        strings      083F
__end_of_ISR                   text16       039F
__end_of_LCDClear              text8        0A1A
__end_of_LCD_INIT_STRING       strings      083C
__end_of_LIGAR                 strings      0840
__end_of_LIGAR_BOMBA           strings      0841
__end_of_LIGAR_MOTOR           strings      0842
__end_of_USARTInit             text6        0C75
__end_of_USARTReceiveChar      text42       16E8
__end_of_USARTWriteChar        text14       1671
__end_of_USARTWriteString      text43       1764
__end_of___aldiv               text7        0F5D
__end_of___awtoft              text40       1741
__end_of___ftadd               text35       04A6
__end_of___ftdiv               text39       06EB
__end_of___ftge                text38       0BB1
__end_of___ftmul               text37       0579
__end_of___ftneg               text36       1651
__end_of___ftpack              text41       07FE
__end_of___ftsub               text34       1704
__end_of___fttol               text33       0ECE
__end_of___lldiv               text31       0C0F
__end_of___llmod               text30       0AFB
__end_of___lltoft              text32       17D5
__end_of___wmul                text29       1787
__end_of__initialization       cinit        0031
__end_of__stringdata           strings      088E
__end_of__stringtab            strings      0810
__end_of_ativar                text12       0D4F
__end_of_dpowers               strings      0838
__end_of_ftoa                  text26       0633
__end_of_inicialize            text1        0DC7
__end_of_init_lcd_4bit         text5        0CDB
__end_of_isdigit               text28       167F
__end_of_lcd_envia_byte        text9        0927
__end_of_lcd_envia_nibble      text10       0B54
__end_of_lcd_escreve_string    text2        08F2
__end_of_lcd_gotoxy            text4        1720
__end_of_lcd_putc              text3        0A61
__end_of_main                  maintext     1664
__end_of_progressBar           text20       0AAD
__end_of_refresh               text18       0E40
__end_of_sendSerial            text17       09DA
__end_of_sprintf               text27       0271
__end_ofi1_Ativar              text19       1000
__end_ofi1_USARTWriteChar      text44       1649
__end_ofi1_lcd_envia_byte      text24       1800
__end_ofi1_lcd_envia_nibble    text25       0960
__end_ofi1_lcd_escreve_string  text21       17AA
__end_ofi1_lcd_gotoxy          text23       16CD
__end_ofi1_lcd_putc            text22       099B
__initialization               cinit        0015
__pbssBANK0                    bssBANK0     0067
__pbssBANK1                    bssBANK1     00BE
__pcstackBANK0                 cstackBANK0  0020
__pcstackBANK1                 cstackBANK1  00A0
__pcstackCOMMON                cstackCOMMON 0070
__pdataBANK1                   dataBANK1    00D5
__pidataBANK1                  idataBANK1   167F
__pintentry                    intentry     0004
__pmaintext                    maintext     1659
__pstrings                     strings      0800
__ptext1                       text1        0D4F
__ptext10                      text10       0AFB
__ptext11                      text11       16A0
__ptext12                      text12       0CDB
__ptext13                      text13       06EB
__ptext14                      text14       1664
__ptext15                      text15       0894
__ptext16                      text16       0271
__ptext17                      text17       099B
__ptext18                      text18       0DC7
__ptext19                      text19       0F5D
__ptext2                       text2        08C1
__ptext20                      text20       0A61
__ptext21                      text21       1787
__ptext22                      text22       0960
__ptext23                      text23       16B3
__ptext24                      text24       17D5
__ptext25                      text25       0927
__ptext26                      text26       0579
__ptext27                      text27       0035
__ptext28                      text28       1671
__ptext29                      text29       1764
__ptext3                       text3        0A1A
__ptext30                      text30       0AAD
__ptext31                      text31       0BB1
__ptext32                      text32       17AA
__ptext33                      text33       0E40
__ptext34                      text34       16E8
__ptext35                      text35       039F
__ptext36                      text36       1649
__ptext37                      text37       04A6
__ptext38                      text38       0B54
__ptext39                      text39       0633
__ptext4                       text4        1704
__ptext40                      text40       1720
__ptext41                      text41       0796
__ptext42                      text42       16CD
__ptext43                      text43       1741
__ptext44                      text44       1641
__ptext5                       text5        0C75
__ptext6                       text6        0C0F
__ptext7                       text7        0ECE
__ptext8                       text8        09DA
__ptext9                       text9        08F2
__size_of_ADCInit              (abs)        0000
__size_of_ADCRead              (abs)        0000
__size_of_Ativar               (abs)        0000
__size_of_ISR                  (abs)        0000
__size_of_LCDClear             (abs)        0000
__size_of_USARTInit            (abs)        0000
__size_of_USARTReceiveChar     (abs)        0000
__size_of_USARTWriteChar       (abs)        0000
__size_of_USARTWriteString     (abs)        0000
__size_of___aldiv              (abs)        0000
__size_of___awtoft             (abs)        0000
__size_of___ftadd              (abs)        0000
__size_of___ftdiv              (abs)        0000
__size_of___ftge               (abs)        0000
__size_of___ftmul              (abs)        0000
__size_of___ftneg              (abs)        0000
__size_of___ftpack             (abs)        0000
__size_of___ftsub              (abs)        0000
__size_of___fttol              (abs)        0000
__size_of___lldiv              (abs)        0000
__size_of___llmod              (abs)        0000
__size_of___lltoft             (abs)        0000
__size_of___wmul               (abs)        0000
__size_of_ativar               (abs)        0000
__size_of_ftoa                 (abs)        0000
__size_of_inicialize           (abs)        0000
__size_of_init_lcd_4bit        (abs)        0000
__size_of_isdigit              (abs)        0000
__size_of_lcd_envia_byte       (abs)        0000
__size_of_lcd_envia_nibble     (abs)        0000
__size_of_lcd_escreve_string   (abs)        0000
__size_of_lcd_gotoxy           (abs)        0000
__size_of_lcd_putc             (abs)        0000
__size_of_main                 (abs)        0000
__size_of_progressBar          (abs)        0000
__size_of_refresh              (abs)        0000
__size_of_sendSerial           (abs)        0000
__size_of_sprintf              (abs)        0000
__size_ofi1_Ativar             (abs)        0000
__size_ofi1_USARTWriteChar     (abs)        0000
__size_ofi1_lcd_envia_byte     (abs)        0000
__size_ofi1_lcd_envia_nibble   (abs)        0000
__size_ofi1_lcd_escreve_string (abs)        0000
__size_ofi1_lcd_gotoxy         (abs)        0000
__size_ofi1_lcd_putc           (abs)        0000
__stringbase                   strings      080F
__stringdata                   strings      0842
__stringtab                    strings      0800
_ativar                        text12       0CDB
_countInferior                 bssBANK0     0069
_countSuperior                 bssBANK0     006B
_dpowers                       strings      0810
_flag_Start                    bssBANK1     00BE
_ftoa                          text26       0579
_inicialize                    text1        0D4F
_init_lcd_4bit                 text5        0C75
_isdigit                       text28       1671
_isdigit$892                   cstackCOMMON 0070
_lcd_envia_byte                text9        08F2
_lcd_envia_nibble              text10       0AFB
_lcd_escreve_string            text2        08C1
_lcd_gotoxy                    text4        1704
_lcd_putc                      text3        0A1A
_main                          maintext     1659
_nivelInferior                 bssBANK1     00C0
_nivelSuperior                 bssBANK1     00C2
_progressBar                   text20       0A61
_recipiente                    bssBANK0     006D
_refresh                       text18       0DC7
_sendSerial                    text17       099B
_sprintf                       text27       0035
btemp                          (abs)        007E
clear_ram0                     clrtext      1651
end_of_initialization          cinit        0031
ftoa@buf                       bssBANK1     00C4
ftoa@cp                        cstackBANK0  0051
ftoa@f                         cstackBANK0  0044
ftoa@l                         cstackBANK0  004D
ftoa@rem                       cstackBANK0  0049
ftoa@status                    cstackBANK0  0047
i1Ativar@comando               cstackCOMMON 0072
i1USARTWriteChar@USARTData     cstackCOMMON 0070
i1_Ativar                      text19       0F5D
i1_USARTWriteChar              text44       1641
i1_lcd_envia_byte              text24       17D5
i1_lcd_envia_nibble            text25       0927
i1_lcd_escreve_string          text21       1787
i1_lcd_gotoxy                  text23       16B3
i1_lcd_putc                    text22       0960
i1lcd_envia_byte@address       cstackCOMMON 0074
i1lcd_envia_byte@n             cstackCOMMON 0072
i1lcd_envia_nibble@n           cstackCOMMON 0071
i1lcd_escreve_string@y         cstackCOMMON 007C
i1lcd_gotoxy@address           cstackCOMMON 0078
i1lcd_gotoxy@x                 cstackCOMMON 0077
i1lcd_gotoxy@y                 cstackCOMMON 0075
i1lcd_putc@c                   cstackCOMMON 007B
init_fetch0                    inittext     168F
init_lcd_4bit@i                cstackBANK1  00A7
init_ram0                      inittext     1693
interrupt_function             intentry     0004
intlevel0                      functab      0000
intlevel1                      functab      0000
intlevel2                      functab      0000
intlevel3                      functab      0000
intlevel4                      functab      0000
intlevel5                      functab      0000
isdigit@c                      cstackCOMMON 0071
lcd_envia_byte@address         cstackBANK1  00A4
lcd_envia_byte@n               cstackBANK1  00A2
lcd_envia_nibble@n             cstackBANK1  00A1
lcd_escreve_string@y           cstackBANK1  00AC
lcd_gotoxy@address             cstackBANK1  00A8
lcd_gotoxy@x                   cstackBANK1  00A7
lcd_gotoxy@y                   cstackBANK1  00A5
lcd_putc@c                     cstackBANK1  00AB
ltemp                          (abs)        007E
ltemp0                         (abs)        007E
ltemp1                         (abs)        0082
ltemp2                         (abs)        0086
ltemp3                         (abs)        0080
progressBar@F1346              dataBANK1    00D5
progressBar@aux                cstackBANK0  0026
progressBar@i                  cstackBANK0  0036
progressBar@preint             cstackBANK0  0020
progressBar@result             cstackBANK0  0038
reset_vec                      reset_vec    0000
saved_w                        (abs)        007E
sendSerial@envio               cstackBANK0  0048
sendSerial@nivelRecipiente     cstackBANK0  0049
sendSerial@origem              cstackBANK0  0020
sendSerial@x                   cstackBANK0  004A
sprintf@_val                   cstackBANK0  003A
sprintf@ap                     cstackBANK0  0039
sprintf@c                      cstackBANK0  0043
sprintf@f                      cstackBANK0  002A
sprintf@flag                   cstackBANK0  0038
sprintf@prec                   cstackBANK0  0041
sprintf@sp                     cstackBANK0  003E
sprintf@width                  cstackBANK0  003F
stackhi                        (abs)        0000
stacklo                        (abs)        0000
start                          init         0012
start_initialization           cinit        0015
ttemp                          (abs)        007E
ttemp0                         (abs)        007E
ttemp1                         (abs)        0081
ttemp2                         (abs)        0084
ttemp3                         (abs)        0087
ttemp4                         (abs)        007F
wtemp                          (abs)        007E
wtemp0                         (abs)        007E
wtemp1                         (abs)        0080
wtemp2                         (abs)        0082
wtemp3                         (abs)        0084
wtemp4                         (abs)        0086
wtemp5                         (abs)        0088
wtemp6                         (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 360 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:   13
 This function calls:
		_ativar
		_inicialize
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _inicialize *****************
 Defined at:
		line 331 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       3       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ADCInit
		_LCDClear
		_USARTInit
		_init_lcd_4bit
		_lcd_escreve_string
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_escreve_string *****************
 Defined at:
		line 168 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  y               2   12[BANK1 ] PTR const unsigned char 
		 -> ftoa@buf(17), STR_4(16), STR_3(2), STR_2(7), 
		 -> progressBar@aux(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       2       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_lcd_putc
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _lcd_putc *****************
 Defined at:
		line 82 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   11[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_lcd_envia_byte
		_lcd_gotoxy
 This function is called by:
		_lcd_escreve_string
		_lcd_escreve_p
 This function uses a non-reentrant model


 *************** function _lcd_gotoxy *****************
 Defined at:
		line 70 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    5[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    7[BANK1 ] unsigned char 
  address         1    8[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_lcd_envia_byte
 This function is called by:
		_lcd_putc
 This function uses a non-reentrant model


 *************** function _init_lcd_4bit *****************
 Defined at:
		line 6 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    7[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_lcd_envia_byte
		_lcd_envia_nibble
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _USARTInit *****************
 Defined at:
		line 34 in file "main.c"
 Parameters:    Size  Location     Type
  BaudRate        4   15[BANK1 ] long 
  Mode            2   19[BANK1 ] int 
 Auto vars:     Size  Location     Type
  BR              2   25[BANK1 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       6       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       4       0       0
      Totals:         0       0      12       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___aldiv
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK1 ] long 
  dividend        4    4[BANK1 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   11[BANK1 ] long 
  sign            1   10[BANK1 ] unsigned char 
  counter         1    9[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK1 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       8       0       0
      Locals:         0       0       6       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0      15       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_USARTInit
 This function uses a non-reentrant model


 *************** function _LCDClear *****************
 Defined at:
		line 179 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_lcd_envia_byte
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _lcd_envia_byte *****************
 Defined at:
		line 53 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  n               1    2[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  address         1    4[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_lcd_envia_nibble
 This function is called by:
		_init_lcd_4bit
		_lcd_gotoxy
		_lcd_putc
		_LCDClear
 This function uses a non-reentrant model


 *************** function _lcd_envia_nibble *****************
 Defined at:
		line 39 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  n               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  n               1    1[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_init_lcd_4bit
		_lcd_envia_byte
 This function uses a non-reentrant model


 *************** function _ADCInit *****************
 Defined at:
		line 229 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _ativar *****************
 Defined at:
		line 307 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       3       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ADCRead
		_Ativar
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Ativar *****************
 Defined at:
		line 123 in file "main.c"
 Parameters:    Size  Location     Type
  comando         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  comando         1    2[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_USARTWriteChar
 This function is called by:
		_ativar
 This function uses a non-reentrant model


 *************** function _USARTWriteChar *****************
 Defined at:
		line 76 in file "main.c"
 Parameters:    Size  Location     Type
  USARTData       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  USARTData       1    0[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_Ativar
 This function uses a non-reentrant model


 *************** function _ADCRead *****************
 Defined at:
		line 249 in file "main.c"
 Parameters:    Size  Location     Type
  ch              2    0[BANK1 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       2       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ativar
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 261 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  input2          3   67[BANK0 ] float 
  input           3   64[BANK0 ] float 
  pre             3   57[BANK0 ] float 
  status          2   62[BANK0 ] int 
  preint          2   60[BANK0 ] int 
  per             1   70[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
  buf             1   56[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      15       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0      21       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_USARTReceiveChar
		___awtoft
		___ftdiv
		___ftmul
		___fttol
		_ftoa
		_progressBar
		_refresh
		_sendSerial
		i1_Ativar
		i1_USARTWriteChar
		i1_lcd_escreve_string
		i1_lcd_gotoxy
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _sendSerial *****************
 Defined at:
		line 151 in file "main.c"
 Parameters:    Size  Location     Type
  nivelRecipie    1    wreg     PTR unsigned char 
		 -> ftoa@buf(17), 
 Auto vars:     Size  Location     Type
  nivelRecipie    1   41[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
  origem         40    0[BANK0 ] unsigned char [40]
  x               2   42[BANK0 ] int 
  envio           1   40[BANK0 ] PTR const unsigned char 
		 -> sendSerial@origem(40), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      44       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      44       0       0       0
Total ram usage:       45 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_USARTWriteString
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _refresh *****************
 Defined at:
		line 199 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_Ativar
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_Ativar *****************
 Defined at:
		line 123 in file "main.c"
 Parameters:    Size  Location     Type
  comando         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  comando         1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_USARTWriteChar
 This function is called by:
		_refresh
		_ISR
 This function uses a non-reentrant model


 *************** function _progressBar *****************
 Defined at:
		line 178 in file "main.c"
 Parameters:    Size  Location     Type
  preint          2    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
  aux            16    6[BANK0 ] unsigned char [16]
  i               2   22[BANK0 ] int 
  result          1   24[BANK0 ] PTR unsigned char 
		 -> progressBar@aux(16), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      19       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      25       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		i1_lcd_escreve_string
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_lcd_escreve_string *****************
 Defined at:
		line 168 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  y               2   12[COMMON] PTR const unsigned char 
		 -> ftoa@buf(17), STR_4(16), STR_3(2), STR_2(7), 
		 -> progressBar@aux(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i1_lcd_putc
 This function is called by:
		_progressBar
		_ISR
 This function uses a non-reentrant model


 *************** function i1_lcd_putc *****************
 Defined at:
		line 82 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i1_lcd_envia_byte
		i1_lcd_gotoxy
 This function is called by:
		i1_lcd_escreve_string
 This function uses a non-reentrant model


 *************** function i1_lcd_gotoxy *****************
 Defined at:
		line 70 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    7[COMMON] unsigned char 
  lcd_gotoxy      1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_lcd_envia_byte
 This function is called by:
		_ISR
		i1_lcd_putc
 This function uses a non-reentrant model


 *************** function i1_lcd_envia_byte *****************
 Defined at:
		line 53 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  n               1    2[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  address         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_lcd_envia_nibble
 This function is called by:
		i1_lcd_gotoxy
		i1_lcd_putc
 This function uses a non-reentrant model


 *************** function i1_lcd_envia_nibble *****************
 Defined at:
		line 39 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  n               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  n               1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_lcd_envia_byte
 This function uses a non-reentrant model


 *************** function _ftoa *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftoa.c"
 Parameters:    Size  Location     Type
  f               3   36[BANK0 ] float 
  status          1   39[BANK0 ] PTR int 
		 -> ISR@status(2), 
 Auto vars:     Size  Location     Type
  l               4   45[BANK0 ] unsigned long 
  rem             4   41[BANK0 ] unsigned long 
  cp              1   49[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftge
		___ftmul
		___ftneg
		___ftsub
		___fttol
		___lltoft
		_sprintf
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> ftoa@buf(17), 
  f               1   10[BANK0 ] PTR const unsigned char 
		 -> STR_5(11), 
 Auto vars:     Size  Location     Type
  sp              1   30[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
  _val            4   26[BANK0 ] struct .
  prec            2   33[BANK0 ] int 
  width           2   31[BANK0 ] int 
  c               1   35[BANK0 ] char 
  ap              1   25[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  flag            1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   10[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       9       0       0       0
      Locals:         0      12       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lldiv
		___llmod
		___wmul
		_isdigit
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMMON] unsigned int 
  multiplicand    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___llmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\llmod.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] unsigned long 
  dividend        4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  counter         1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lldiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[COMMON] unsigned long 
  dividend        4    4[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  quotient        4    9[COMMON] unsigned long 
  counter         1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         5       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:        14       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lltoft *****************
 Defined at:
		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lltoft.c"
 Parameters:    Size  Location     Type
  c               4    8[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  exp             1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   16[BANK0 ] float 
 Auto vars:     Size  Location     Type
  lval            4   25[BANK0 ] unsigned long 
  exp1            1   29[BANK0 ] unsigned char 
  sign1           1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   16[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftsub *****************
 Defined at:
		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftsub.c"
 Parameters:    Size  Location     Type
  f2              3    7[BANK0 ] float 
  f1              3   10[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    7[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___ftadd
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3    8[COMMON] float 
  f2              3   11[COMMON] float 
 Auto vars:     Size  Location     Type
  exp1            1    6[BANK0 ] unsigned char 
  exp2            1    5[BANK0 ] unsigned char 
  sign            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       4       0       0       0
      Totals:         6       7       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		___ftsub
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMMON] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3    0[BANK0 ] float 
  f2              3    3[BANK0 ] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   11[BANK0 ] unsigned um
  sign            1   15[BANK0 ] unsigned char 
  cntr            1   14[BANK0 ] unsigned char 
  exp             1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_ISR
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3    0[COMMON] float 
  ff2             3    3[COMMON] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          6       0       0       0       0
      Totals:        12       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 Parameters:    Size  Location     Type
  f2              3   16[BANK0 ] float 
  f1              3   19[BANK0 ] float 
 Auto vars:     Size  Location     Type
  f3              3   27[BANK0 ] float 
  sign            1   31[BANK0 ] unsigned char 
  exp             1   30[BANK0 ] unsigned char 
  cntr            1   26[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   16[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2    8[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMMON] unsigned um
  exp             1    3[COMMON] unsigned char 
  sign            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         5       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___lltoft
 This function uses a non-reentrant model


 *************** function _USARTReceiveChar *****************
 Defined at:
		line 98 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  USARTData       1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_USARTWriteString
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _USARTWriteString *****************
 Defined at:
		line 85 in file "main.c"
 Parameters:    Size  Location     Type
  str             2    1[COMMON] PTR const unsigned char 
		 -> sendSerial@origem(40), STR_1(40), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_USARTWriteChar
 This function is called by:
		_USARTReceiveChar
		_sendSerial
 This function uses a non-reentrant model


 *************** function i1_USARTWriteChar *****************
 Defined at:
		line 76 in file "main.c"
 Parameters:    Size  Location     Type
  USARTData       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  USARTData       1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_USARTWriteString
		_ISR
		i1_Ativar
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c
		___ftpack      		CODE           	0796	0000	104

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\float.c estimated size: 104

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c
		___awtoft      		CODE           	1720	0000	33

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awtoft.c estimated size: 33

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c
		___ftmul       		CODE           	04A6	0000	211

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftmul.c estimated size: 211

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\llmod.c
		___llmod       		CODE           	0AAD	0000	78

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\llmod.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftge.c
		___ftge        		CODE           	0B54	0000	93

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftge.c estimated size: 93

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c
		_sprintf       		CODE           	0035	0000	572

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c estimated size: 572

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lltoft.c
		___lltoft      		CODE           	17AA	0000	43

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lltoft.c estimated size: 43

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c
		___fttol       		CODE           	0E40	0000	142

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\fttol.c estimated size: 142

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\isdigit.c
		_isdigit       		CODE           	1671	0000	14

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\isdigit.c estimated size: 14

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c
		___ftadd       		CODE           	039F	0000	263

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftadd.c estimated size: 263

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lldiv.c
		___lldiv       		CODE           	0BB1	0000	94

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lldiv.c estimated size: 94

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c
		___aldiv       		CODE           	0ECE	0000	143

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\aldiv.c estimated size: 143

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c
		___wmul        		CODE           	1764	0000	35

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul16.c estimated size: 35

shared
		_DESLIGAR      		STRING         	083C	0000	1
		__stringtab    		STRING         	0800	0000	16
		__stringdata   		STRING         	0842	0000	76
		_LIGAR         		STRING         	083F	0000	1
		_dpowers       		STRING         	0810	0000	40
		_DESLIGAR_BOMBA		STRING         	083D	0000	1
		_DESLIGAR_MOTOR		STRING         	083E	0000	1
		_LIGAR_BOMBA   		STRING         	0840	0000	1
		i1_lcd_envia_by		CODE           	17D5	0000	43
		_LCD_INIT_STRIN		STRING         	0838	0000	4
		i1_lcd_escreve_		CODE           	1787	0000	35
		__initializatio		CODE           	0015	0000	28
		i1_lcd_envia_ni		CODE           	0927	0000	57
		i1_lcd_gotoxy  		CODE           	16B3	0000	26
		i1_USARTWriteCh		CODE           	1641	0000	8
		i1_lcd_putc    		CODE           	0960	0000	59
		i1_Ativar      		CODE           	0F5D	0000	163
		_LIGAR_MOTOR   		STRING         	0841	0000	1

shared estimated size: 561

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c
		___ftneg       		CODE           	1649	0000	8

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftneg.c estimated size: 8

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftsub.c
		___ftsub       		CODE           	16E8	0000	28

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftsub.c estimated size: 28

lcd_4bit.c
		_LCDClear      		CODE           	09DA	0000	64
		_lcd_putc      		CODE           	0A1A	0000	71
		_lcd_envia_nibb		CODE           	0AFB	0000	89
		_lcd_escreve_st		CODE           	08C1	0000	49
		_lcd_envia_byte		CODE           	08F2	0000	53
		_lcd_gotoxy    		CODE           	1704	0000	28
		_init_lcd_4bit 		CODE           	0C75	0000	102

lcd_4bit.c estimated size: 456

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c
		___ftdiv       		CODE           	0633	0000	184

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic\ftdiv.c estimated size: 184

main.c
		_refresh       		CODE           	0DC7	0000	121
		_ISR           		CODE           	0271	0000	302
		_ativar        		CODE           	0CDB	0000	116
		_ADCInit       		CODE           	16A0	0000	19
		_sendSerial    		CODE           	099B	0000	63
		_main          		CODE           	1659	0000	11
		_inicialize    		CODE           	0D4F	0000	120
		_USARTWriteStri		CODE           	1741	0000	35
		_USARTWriteChar		CODE           	1664	0000	13
		_ADCRead       		CODE           	0894	0000	45
		_Ativar        		CODE           	06EB	0000	171
		_progressBar   		CODE           	0A61	0000	76
		_USARTInit     		CODE           	0C0F	0000	102
		_USARTReceiveCh		CODE           	16CD	0000	27

main.c estimated size: 1221

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftoa.c
		_ftoa          		CODE           	0579	0000	186

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\ftoa.c estimated size: 186

