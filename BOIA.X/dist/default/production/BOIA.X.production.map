Microchip MPLAB XC8 Compiler V1.32 ()

Linker command line:

--edf=C:\Program Files\Microchip\xc8\v1.32\dat\en_msgs.txt -cs \
  -h+dist/default/production\BOIA.X.production.sym \
  --cmf=dist/default/production\BOIA.X.production.cmf -z -Q16F877A \
  -oC:\Users\Alan\AppData\Local\Temp\s3ug.6 \
  -Mdist/default/production/BOIA.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACONST=00h-0FFhx32 -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -AENTRY=00h-0FFhx32 -ASTRING=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Alan\AppData\Local\Temp\s3ug.obj \
  dist/default/production\BOIA.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Alan\AppData\Local\Temp\s3ug.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\BOIA.X.production.obj
                cinit                                15       15       1B        8       0
                intentry                              4        4        E        8       0
                text40                              953      953        8     12A6       0
                text39                              9E1      9E1       1C     13C2       0
                text38                              B93      B93       33     1726       0
                text37                              ABB      ABB       25     1576       0
                text36                              BFB      BFB       39     17F6       0
                text35                              AE0      AE0       2B     15C0       0
                text34                              9C7      9C7       1A     138E       0
                text33                              C34      C34       3B     1868       0
                text32                              A75      A75       23     14EA       0
                text31                              CF6      CF6       4C     19EC       0
                text30                              9AF      9AF       18     135E       0
                text29                              F0A      F0A       68     1E14       0
                text28                              63F      63F       B8        8       0
                text27                              A54      A54       21     14A8       0
                text26                              DE9      DE9       5D     1BD2       0
                text25                              4B2      4B2       D3        8       0
                text24                              95B      95B        8     12B6       0
                text23                              3AB      3AB      107        8       0
                text22                              9FD      9FD       1C     13FA       0
                text21                              F72      F72       8E     1EE4       0
                text20                              B0B      B0B       2B     1616       0
                text19                              E46      E46       5E     1C8C       0
                text18                              D42      D42       4E     1A84       0
                text17                              A98      A98       23     1530       0
                text16                              96B      96B        E     12D6       0
                text15                               30       30      23C        8       0
                text14                              585      585       BA        8       0
                text13                              6F7      6F7       8E        8       0
                text12                              26C      26C      13F        8       0
                text11                              A35      A35       1F     146A       0
                text10                              99C      99C       13     1338       0
                text9                               D90      D90       59     1B20       0
                text8                               BC6      BC6       35     178C       0
                text7                               C6F      C6F       40     18DE       0
                text6                               EA4      EA4       66     1D48       0
                text5                               A19      A19       1C     1432       0
                text4                               CAF      CAF       47     195E       0
                text3                               B62      B62       31     16C4       0
                text2                               785      785       72        8       0
                text1                               7F7      7F7        9        8       0
                maintext                            B36      B36       2C     166C       0
                cstackBANK0                          20       20       4E       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       2E       A0       1
                cstackBANK3                         190      190       14      190       1
                inittext                            979      979       11     12F2       0
                clrtext                             963      963        8     12C6       0
                bssBANK3                            1A4      1A4       11      190       1
                dataBANK1                            CE       CE       12       A0       1
                bssBANK0                             6E       6E        2       20       1
                strings                             800      800       8C     1000       0
                idataBANK1                          98A      98A       12     1314       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       1B         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text40                              953      953        8         0
                text39                              9E1      9E1       1C         0
                text38                              B93      B93       33         0
                text37                              ABB      ABB       25         0
                text36                              BFB      BFB       39         0
                text35                              AE0      AE0       2B         0
                text34                              9C7      9C7       1A         0
                text33                              C34      C34       3B         0
                text32                              A75      A75       23         0
                text31                              CF6      CF6       4C         0
                text30                              9AF      9AF       18         0
                text29                              F0A      F0A       68         0
                text28                              63F      63F       B8         0
                text27                              A54      A54       21         0
                text26                              DE9      DE9       5D         0
                text25                              4B2      4B2       D3         0
                text24                              95B      95B        8         0
                text23                              3AB      3AB      107         0
                text22                              9FD      9FD       1C         0
                text21                              F72      F72       8E         0
                text20                              B0B      B0B       2B         0
                text19                              E46      E46       5E         0
                text18                              D42      D42       4E         0
                text17                              A98      A98       23         0
                text16                              96B      96B        E         0
                text15                               30       30      23C         0
                text14                              585      585       BA         0
                text13                              6F7      6F7       8E         0
                text12                              26C      26C      13F         0
                text11                              A35      A35       1F         0
                text10                              99C      99C       13         0
                text9                               D90      D90       59         0
                text8                               BC6      BC6       35         0
                text7                               C6F      C6F       40         0
                text6                               EA4      EA4       66         0
                text5                               A19      A19       1C         0
                text4                               CAF      CAF       47         0
                text3                               B62      B62       31         0
                text2                               785      785       72         0
                text1                               7F7      7F7        9         0
                maintext                            B36      B36       2C         0
                inittext                            979      979       11         0
                clrtext                             963      963        8         0
                idataBANK1                          98A      98A       12         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         
                strings                             800      800       8C         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       4E         1
                bssBANK0                             6E       6E        2         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       2E         1
                dataBANK1                            CE       CE       12         1

        CLASS   BANK2          

        CLASS   BANK3          
                cstackBANK3                         190      190       14         1
                bssBANK3                            1A4      1A4       11         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007FC  000800         8       0  CODE        2
                cstackBANK0                    000020  000050  000070        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000040  0000E0        A0       1  BANK1       1
                cstackBANK3                    000190  000025  0001B5       190       1  BANK3       1
                strings                        000800  00008C  00088C      1000       0  STRING      2
                text40                         000953  000008  00095B      12A6       0  CODE        2
                text24                         00095B  000008  000963      12B6       0  CODE        2
                clrtext                        000963  000008  00096B      12C6       0  CODE        2
                text16                         00096B  00000E  000979      12D6       0  CODE        2
                inittext                       000979  000011  00098A      12F2       0  CODE        2
                idataBANK1                     00098A  000012  00099C      1314       0  CODE        2
                text10                         00099C  000013  0009AF      1338       0  CODE        2
                text30                         0009AF  000018  0009C7      135E       0  CODE        2
                text34                         0009C7  00001A  0009E1      138E       0  CODE        2
                text39                         0009E1  00001C  0009FD      13C2       0  CODE        2
                text22                         0009FD  00001C  000A19      13FA       0  CODE        2
                text5                          000A19  00001C  000A35      1432       0  CODE        2
                text11                         000A35  00001F  000A54      146A       0  CODE        2
                text27                         000A54  000021  000A75      14A8       0  CODE        2
                text32                         000A75  000023  000A98      14EA       0  CODE        2
                text17                         000A98  000023  000ABB      1530       0  CODE        2
                text37                         000ABB  000025  000AE0      1576       0  CODE        2
                text35                         000AE0  00002B  000B0B      15C0       0  CODE        2
                text20                         000B0B  00002B  000B36      1616       0  CODE        2
                maintext                       000B36  00002C  000B62      166C       0  CODE        2
                text3                          000B62  000031  000B93      16C4       0  CODE        2
                text38                         000B93  000033  000BC6      1726       0  CODE        2
                text8                          000BC6  000035  000BFB      178C       0  CODE        2
                text36                         000BFB  000039  000C34      17F6       0  CODE        2
                text33                         000C34  00003B  000C6F      1868       0  CODE        2
                text7                          000C6F  000040  000CAF      18DE       0  CODE        2
                text4                          000CAF  000047  000CF6      195E       0  CODE        2
                text31                         000CF6  00004C  000D42      19EC       0  CODE        2
                text18                         000D42  00004E  000D90      1A84       0  CODE        2
                text9                          000D90  000059  000DE9      1B20       0  CODE        2
                text26                         000DE9  00005D  000E46      1BD2       0  CODE        2
                text19                         000E46  00005E  000EA4      1C8C       0  CODE        2
                text6                          000EA4  000066  000F0A      1D48       0  CODE        2
                text29                         000F0A  000068  000F72      1E14       0  CODE        2
                text21                         000F72  00008E  001000      1EE4       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            00E0-00EF             10           1
        BANK2            0110-016F             60           1
        BANK3            01B5-01EF             3B           1
        CODE             0003-0003              1           2
                         088C-0952             C7
                         1000-1FFF            800
        CONST            0003-0003              1           2
                         088C-0952             74
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         088C-0952             74
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              00E0-00EF             10           1
                         0110-016F             60
                         01B5-01EF             3B
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         088C-0952             C7
                         1000-1FFF           1000
        STRING           0003-0003              1           2
                         088C-0952             74
                         1000-1FFF            100

                                  Symbol Table

?___awtoft                     cstackCOMMON 0078
?___ftadd                      cstackCOMMON 0078
?___ftdiv                      cstackBANK0  0030
?___ftmul                      cstackBANK0  0020
?___ftneg                      cstackCOMMON 0070
?___ftpack                     cstackCOMMON 0070
?___ftsub                      cstackBANK0  0027
?___fttol                      cstackBANK0  0030
?___lldiv                      cstackCOMMON 0070
?___llmod                      cstackBANK0  0020
?___lltoft                     cstackCOMMON 0078
?___wmul                       cstackCOMMON 0070
?_sprintf                      cstackBANK0  002A
ADCRead@ch                     cstackBANK3  0190
Ativar@comando                 cstackCOMMON 0073
ISR@bufferConversor            cstackBANK0  005E
ISR@input                      cstackBANK0  0066
ISR@input2                     cstackBANK0  0069
ISR@percentual                 cstackBANK0  0062
ISR@pre                        cstackBANK0  005F
ISR@preint                     cstackBANK0  006C
ISR@recebido                   cstackBANK0  0063
ISR@status                     cstackBANK0  0064
ProgressBar@F1338              dataBANK1    00CE
ProgressBar@aux                cstackBANK0  0026
ProgressBar@i                  cstackBANK0  0036
ProgressBar@preint             cstackBANK0  0020
ProgressBar@result             cstackBANK0  0038
USARTReceiveChar@USARTData     cstackCOMMON 0074
USARTWriteChar@USARTData       cstackCOMMON 0070
USARTWriteString@str           cstackCOMMON 0072
_ADCInit                       text10       099C
_ADCON0bits                    (abs)        001F
_ADCON1bits                    (abs)        009F
_ADCRead                       text11       0A35
_ADCResult                     bssBANK0     006E
_ADRESH                        (abs)        001E
_ADRESL                        (abs)        009E
_Ativar                        text38       0B93
_Bomba                         text37       0ABB
_INFERIOR                      strings      083C
_INTCONbits                    (abs)        000B
_ISR                           text12       026C
_LCDClear                      text7        0C6F
_LCD_INIT_STRING               strings      0838
_OERR                          (abs)        00C1
_PIE1bits                      (abs)        008C
_PIR1bits                      (abs)        000C
_PORTAbits                     (abs)        0005
_PORTBbits                     (abs)        0006
_PORTCbits                     (abs)        0007
_PORTDbits                     (abs)        0008
_ProgressBar                   text31       0CF6
_RCREG                         (abs)        001A
_RCSTAbits                     (abs)        0018
_SPBRG                         (abs)        0099
_SUPERIOR                      strings      083E
_TRISA                         (abs)        0085
_TRISBbits                     (abs)        0086
_TRISCbits                     (abs)        0087
_TRISDbits                     (abs)        0088
_TXREG                         (abs)        0019
_TXSTAbits                     (abs)        0098
_USARTReceiveChar              text30       09AF
_USARTWriteChar                text40       0953
_USARTWriteString              text39       09E1
__CFG_BOREN$ON                 (abs)        0000
__CFG_CP$OFF                   (abs)        0000
__CFG_CPD$OFF                  (abs)        0000
__CFG_FOSC$HS                  (abs)        0000
__CFG_LVP$OFF                  (abs)        0000
__CFG_PWRTE$ON                 (abs)        0000
__CFG_WDTE$OFF                 (abs)        0000
__CFG_WRT$OFF                  (abs)        0000
__Habs1                        abs1         0000
__Hbank0                       bank0        0000
__Hbank1                       bank1        0000
__Hbank2                       bank2        0000
__Hbank3                       bank3        0000
__HbssBANK0                    bssBANK0     0000
__HbssBANK3                    bssBANK3     0000
__Hcinit                       cinit        0030
__Hclrtext                     clrtext      0000
__Hcode                        code         0000
__Hcommon                      common       0000
__Hconfig                      config       2008
__HcstackBANK0                 cstackBANK0  0000
__HcstackBANK1                 cstackBANK1  0000
__HcstackBANK3                 cstackBANK3  0000
__HcstackCOMMON                cstackCOMMON 0000
__HdataBANK1                   dataBANK1    0000
__Heeprom_data                 eeprom_data  0000
__Hend_init                    end_init     0015
__Hfunctab                     functab      0000
__HidataBANK1                  idataBANK1   0000
__Hidloc                       idloc        0000
__Hinit                        init         0012
__Hinittext                    inittext     0000
__Hintentry                    intentry     0012
__Hmaintext                    maintext     0000
__Hpowerup                     powerup      0000
__Hram                         ram          0000
__Hreset_vec                   reset_vec    0003
__Hsfr0                        sfr0         0000
__Hsfr1                        sfr1         0000
__Hsfr2                        sfr2         0000
__Hsfr3                        sfr3         0000
__Hspace_0                     (abs)        2008
__Hspace_1                     (abs)        01B5
__Hspace_2                     (abs)        0000
__Hspace_3                     (abs)        0000
__Hstack                       stack        0000
__Hstrings                     strings      0000
__Htext                        text         0000
__Labs1                        abs1         0000
__Lbank0                       bank0        0000
__Lbank1                       bank1        0000
__Lbank2                       bank2        0000
__Lbank3                       bank3        0000
__LbssBANK0                    bssBANK0     0000
__LbssBANK3                    bssBANK3     0000
__Lcinit                       cinit        0015
__Lclrtext                     clrtext      0000
__Lcode                        code         0000
__Lcommon                      common       0000
__Lconfig                      config       2007
__LcstackBANK0                 cstackBANK0  0000
__LcstackBANK1                 cstackBANK1  0000
__LcstackBANK3                 cstackBANK3  0000
__LcstackCOMMON                cstackCOMMON 0000
__LdataBANK1                   dataBANK1    0000
__Leeprom_data                 eeprom_data  0000
__Lend_init                    end_init     0012
__Lfunctab                     functab      0000
__LidataBANK1                  idataBANK1   0000
__Lidloc                       idloc        0000
__Linit                        init         0012
__Linittext                    inittext     0000
__Lintentry                    intentry     0004
__Lmaintext                    maintext     0000
__Lpowerup                     powerup      0000
__Lram                         ram          0000
__Lreset_vec                   reset_vec    0000
__Lsfr0                        sfr0         0000
__Lsfr1                        sfr1         0000
__Lsfr2                        sfr2         0000
__Lsfr3                        sfr3         0000
__Lspace_0                     (abs)        0000
__Lspace_1                     (abs)        0000
__Lspace_2                     (abs)        0000
__Lspace_3                     (abs)        0000
__Lstack                       stack        0000
__Lstrings                     strings      0000
__Ltext                        text         0000
__S0                           (abs)        2008
__S1                           (abs)        01B5
__S2                           (abs)        0000
__S3                           (abs)        0000
___awtoft                      text27       0A54
___awtoft@c                    cstackCOMMON 0078
___awtoft@sign                 cstackCOMMON 007D
___ftadd                       text23       03AB
___ftadd@exp1                  cstackBANK0  0026
___ftadd@exp2                  cstackBANK0  0025
___ftadd@f1                    cstackCOMMON 0078
___ftadd@f2                    cstackCOMMON 007B
___ftadd@sign                  cstackBANK0  0024
___ftdiv                       text28       063F
___ftdiv@cntr                  cstackBANK0  003A
___ftdiv@exp                   cstackBANK0  003E
___ftdiv@f1                    cstackBANK0  0033
___ftdiv@f2                    cstackBANK0  0030
___ftdiv@f3                    cstackBANK0  003B
___ftdiv@sign                  cstackBANK0  003F
___ftge                        text26       0DE9
___ftge@ff1                    cstackCOMMON 0070
___ftge@ff2                    cstackCOMMON 0073
___ftmul                       text25       04B2
___ftmul@cntr                  cstackBANK0  002E
___ftmul@exp                   cstackBANK0  002A
___ftmul@f1                    cstackBANK0  0020
___ftmul@f2                    cstackBANK0  0023
___ftmul@f3_as_product         cstackBANK0  002B
___ftmul@sign                  cstackBANK0  002F
___ftneg                       text24       095B
___ftneg@f1                    cstackCOMMON 0070
___ftpack                      text29       0F0A
___ftpack@arg                  cstackCOMMON 0070
___ftpack@exp                  cstackCOMMON 0073
___ftpack@sign                 cstackCOMMON 0074
___ftsub                       text22       09FD
___ftsub@f1                    cstackBANK0  002A
___ftsub@f2                    cstackBANK0  0027
___fttol                       text21       0F72
___fttol@exp1                  cstackBANK0  003D
___fttol@f1                    cstackBANK0  0030
___fttol@lval                  cstackBANK0  0039
___fttol@sign1                 cstackBANK0  0038
___int_sp                      stack        0000
___latbits                     (abs)        0002
___lldiv                       text19       0E46
___lldiv@counter               cstackCOMMON 007D
___lldiv@dividend              cstackCOMMON 0074
___lldiv@divisor               cstackCOMMON 0070
___lldiv@quotient              cstackCOMMON 0079
___llmod                       text18       0D42
___llmod@counter               cstackBANK0  0029
___llmod@dividend              cstackBANK0  0024
___llmod@divisor               cstackBANK0  0020
___lltoft                      text20       0B0B
___lltoft@c                    cstackCOMMON 0078
___lltoft@exp                  cstackCOMMON 007D
___sp                          stack        0000
___wmul                        text17       0A98
___wmul@multiplicand           cstackCOMMON 0072
___wmul@multiplier             cstackCOMMON 0070
___wmul@product                cstackCOMMON 0074
__end_of_ADCInit               text10       09AF
__end_of_ADCRead               text11       0A54
__end_of_Ativar                text38       0BC6
__end_of_Bomba                 text37       0AE0
__end_of_INFERIOR              strings      083E
__end_of_ISR                   text12       03AB
__end_of_LCDClear              text7        0CAF
__end_of_LCD_INIT_STRING       strings      083C
__end_of_ProgressBar           text31       0D42
__end_of_SUPERIOR              strings      0840
__end_of_USARTReceiveChar      text30       09C7
__end_of_USARTWriteChar        text40       095B
__end_of_USARTWriteString      text39       09FD
__end_of___awtoft              text27       0A75
__end_of___ftadd               text23       04B2
__end_of___ftdiv               text28       06F7
__end_of___ftge                text26       0E46
__end_of___ftmul               text25       0585
__end_of___ftneg               text24       0963
__end_of___ftpack              text29       0F72
__end_of___ftsub               text22       0A19
__end_of___fttol               text21       1000
__end_of___lldiv               text19       0EA4
__end_of___llmod               text18       0D90
__end_of___lltoft              text20       0B36
__end_of___wmul                text17       0ABB
__end_of__initialization       cinit        002C
__end_of__stringdata           strings      088C
__end_of__stringtab            strings      0810
__end_of_dpowers               strings      0838
__end_of_ftoa                  text14       063F
__end_of_inicialize            text2        07F7
__end_of_init_lcd_4bit         text6        0F0A
__end_of_isdigit               text16       0979
__end_of_lcd_envia_byte        text8        0BFB
__end_of_lcd_envia_nibble      text9        0DE9
__end_of_lcd_escreve_string    text3        0B93
__end_of_lcd_gotoxy            text5        0A35
__end_of_lcd_putc              text4        0CF6
__end_of_main                  maintext     0B62
__end_of_reset                 text1        0800
__end_of_sendSerial            text13       0785
__end_of_sprintf               text15       026C
__end_ofi1_lcd_envia_byte      text35       0B0B
__end_ofi1_lcd_envia_nibble    text36       0C34
__end_ofi1_lcd_escreve_string  text32       0A98
__end_ofi1_lcd_gotoxy          text34       09E1
__end_ofi1_lcd_putc            text33       0C6F
__initialization               cinit        0015
__pbssBANK0                    bssBANK0     006E
__pbssBANK3                    bssBANK3     01A4
__pcstackBANK0                 cstackBANK0  0020
__pcstackBANK1                 cstackBANK1  00A0
__pcstackBANK3                 cstackBANK3  0190
__pcstackCOMMON                cstackCOMMON 0070
__pdataBANK1                   dataBANK1    00CE
__pidataBANK1                  idataBANK1   098A
__pintentry                    intentry     0004
__pmaintext                    maintext     0B36
__pstrings                     strings      0800
__ptext1                       text1        07F7
__ptext10                      text10       099C
__ptext11                      text11       0A35
__ptext12                      text12       026C
__ptext13                      text13       06F7
__ptext14                      text14       0585
__ptext15                      text15       0030
__ptext16                      text16       096B
__ptext17                      text17       0A98
__ptext18                      text18       0D42
__ptext19                      text19       0E46
__ptext2                       text2        0785
__ptext20                      text20       0B0B
__ptext21                      text21       0F72
__ptext22                      text22       09FD
__ptext23                      text23       03AB
__ptext24                      text24       095B
__ptext25                      text25       04B2
__ptext26                      text26       0DE9
__ptext27                      text27       0A54
__ptext28                      text28       063F
__ptext29                      text29       0F0A
__ptext3                       text3        0B62
__ptext30                      text30       09AF
__ptext31                      text31       0CF6
__ptext32                      text32       0A75
__ptext33                      text33       0C34
__ptext34                      text34       09C7
__ptext35                      text35       0AE0
__ptext36                      text36       0BFB
__ptext37                      text37       0ABB
__ptext38                      text38       0B93
__ptext39                      text39       09E1
__ptext4                       text4        0CAF
__ptext40                      text40       0953
__ptext5                       text5        0A19
__ptext6                       text6        0EA4
__ptext7                       text7        0C6F
__ptext8                       text8        0BC6
__ptext9                       text9        0D90
__size_of_ADCInit              (abs)        0000
__size_of_ADCRead              (abs)        0000
__size_of_Ativar               (abs)        0000
__size_of_Bomba                (abs)        0000
__size_of_ISR                  (abs)        0000
__size_of_LCDClear             (abs)        0000
__size_of_ProgressBar          (abs)        0000
__size_of_USARTReceiveChar     (abs)        0000
__size_of_USARTWriteChar       (abs)        0000
__size_of_USARTWriteString     (abs)        0000
__size_of___awtoft             (abs)        0000
__size_of___ftadd              (abs)        0000
__size_of___ftdiv              (abs)        0000
__size_of___ftge               (abs)        0000
__size_of___ftmul              (abs)        0000
__size_of___ftneg              (abs)        0000
__size_of___ftpack             (abs)        0000
__size_of___ftsub              (abs)        0000
__size_of___fttol              (abs)        0000
__size_of___lldiv              (abs)        0000
__size_of___llmod              (abs)        0000
__size_of___lltoft             (abs)        0000
__size_of___wmul               (abs)        0000
__size_of_ftoa                 (abs)        0000
__size_of_inicialize           (abs)        0000
__size_of_init_lcd_4bit        (abs)        0000
__size_of_isdigit              (abs)        0000
__size_of_lcd_envia_byte       (abs)        0000
__size_of_lcd_envia_nibble     (abs)        0000
__size_of_lcd_escreve_string   (abs)        0000
__size_of_lcd_gotoxy           (abs)        0000
__size_of_lcd_putc             (abs)        0000
__size_of_main                 (abs)        0000
__size_of_reset                (abs)        0000
__size_of_sendSerial           (abs)        0000
__size_of_sprintf              (abs)        0000
__size_ofi1_lcd_envia_byte     (abs)        0000
__size_ofi1_lcd_envia_nibble   (abs)        0000
__size_ofi1_lcd_escreve_string (abs)        0000
__size_ofi1_lcd_gotoxy         (abs)        0000
__size_ofi1_lcd_putc           (abs)        0000
__stringbase                   strings      080F
__stringdata                   strings      0840
__stringtab                    strings      0800
_dpowers                       strings      0810
_flag_an                       dataBANK1    00DE
_ftoa                          text14       0585
_inicialize                    text2        0785
_init_lcd_4bit                 text6        0EA4
_isdigit                       text16       096B
_isdigit$887                   cstackCOMMON 0070
_lcd_envia_byte                text8        0BC6
_lcd_envia_nibble              text9        0D90
_lcd_escreve_string            text3        0B62
_lcd_gotoxy                    text5        0A19
_lcd_putc                      text4        0CAF
_main                          maintext     0B36
_reset                         text1        07F7
_sendSerial                    text13       06F7
_sprintf                       text15       0030
btemp                          (abs)        007E
clear_ram0                     clrtext      0963
end_of_initialization          cinit        002C
ftoa@buf                       bssBANK3     01A4
ftoa@cp                        cstackBANK0  0051
ftoa@f                         cstackBANK0  0044
ftoa@l                         cstackBANK0  004D
ftoa@rem                       cstackBANK0  0049
ftoa@status                    cstackBANK0  0047
i1_lcd_envia_byte              text35       0AE0
i1_lcd_envia_nibble            text36       0BFB
i1_lcd_escreve_string          text32       0A75
i1_lcd_gotoxy                  text34       09C7
i1_lcd_putc                    text33       0C34
i1lcd_envia_byte@address       cstackCOMMON 0074
i1lcd_envia_byte@n             cstackCOMMON 0072
i1lcd_envia_nibble@n           cstackCOMMON 0071
i1lcd_escreve_string@y         cstackCOMMON 007C
i1lcd_gotoxy@address           cstackCOMMON 0078
i1lcd_gotoxy@x                 cstackCOMMON 0077
i1lcd_gotoxy@y                 cstackCOMMON 0075
i1lcd_putc@c                   cstackCOMMON 007B
init_fetch0                    inittext     0979
init_lcd_4bit@i                cstackBANK3  0197
init_ram0                      inittext     097D
interrupt_function             intentry     0004
intlevel0                      functab      0000
intlevel1                      functab      0000
intlevel2                      functab      0000
intlevel3                      functab      0000
intlevel4                      functab      0000
intlevel5                      functab      0000
isdigit@c                      cstackCOMMON 0071
lcd_envia_byte@address         cstackBANK3  0194
lcd_envia_byte@n               cstackBANK3  0192
lcd_envia_nibble@n             cstackBANK3  0191
lcd_escreve_string@y           cstackBANK3  019C
lcd_gotoxy@address             cstackBANK3  0198
lcd_gotoxy@x                   cstackBANK3  0197
lcd_gotoxy@y                   cstackBANK3  0195
lcd_putc@c                     cstackBANK3  019B
ltemp                          (abs)        007E
ltemp0                         (abs)        007E
ltemp1                         (abs)        0082
ltemp2                         (abs)        0086
ltemp3                         (abs)        0080
reset_vec                      reset_vec    0000
saved_w                        (abs)        007E
sendSerial@envio               cstackBANK1  00CA
sendSerial@nivelRecipiente     cstackBANK1  00CB
sendSerial@origem              cstackBANK1  00A0
sendSerial@preint              cstackBANK0  0052
sendSerial@recipiente          cstackBANK0  0054
sendSerial@status              cstackBANK1  00C8
sendSerial@x                   cstackBANK1  00CC
sprintf@_val                   cstackBANK0  003A
sprintf@ap                     cstackBANK0  0039
sprintf@c                      cstackBANK0  0043
sprintf@f                      cstackBANK0  002A
sprintf@flag                   cstackBANK0  0038
sprintf@prec                   cstackBANK0  0041
sprintf@sp                     cstackBANK0  003E
sprintf@width                  cstackBANK0  003F
stackhi                        (abs)        0000
stacklo                        (abs)        0000
start                          init         0012
start_initialization           cinit        0015
ttemp                          (abs)        007E
ttemp0                         (abs)        007E
ttemp1                         (abs)        0081
ttemp2                         (abs)        0084
ttemp3                         (abs)        0087
ttemp4                         (abs)        007F
wtemp                          (abs)        007E
wtemp0                         (abs)        007E
wtemp1                         (abs)        0080
wtemp2                         (abs)        0082
wtemp3                         (abs)        0084
wtemp4                         (abs)        0086
wtemp5                         (abs)        0088
wtemp6                         (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 321 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       3       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:   13
 This function calls:
		_ADCRead
		_inicialize
		_reset
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _reset *****************
 Defined at:
		line 283 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _inicialize *****************
 Defined at:
		line 295 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       3       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   12
 This function calls:
		_ADCInit
		_LCDClear
		_init_lcd_4bit
		_lcd_escreve_string
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_escreve_string *****************
 Defined at:
		line 168 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  y               2   12[BANK3 ] PTR const unsigned char 
		 -> ftoa@buf(17), STR_4(16), STR_3(2), STR_2(7), 
		 -> ProgressBar@aux(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       2       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_lcd_putc
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _lcd_putc *****************
 Defined at:
		line 82 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   11[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       1       0
      Temps:          0       0       0       2       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_lcd_envia_byte
		_lcd_gotoxy
 This function is called by:
		_lcd_escreve_string
		_lcd_escreve_p
 This function uses a non-reentrant model


 *************** function _lcd_gotoxy *****************
 Defined at:
		line 70 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    5[BANK3 ] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    7[BANK3 ] unsigned char 
  address         1    8[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       1       0
      Locals:         0       0       0       2       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0       4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_lcd_envia_byte
 This function is called by:
		_lcd_putc
 This function uses a non-reentrant model


 *************** function _init_lcd_4bit *****************
 Defined at:
		line 6 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    7[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       1       0
      Temps:          0       0       0       2       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_lcd_envia_byte
		_lcd_envia_nibble
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _LCDClear *****************
 Defined at:
		line 179 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       2       0
      Totals:         0       0       0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_lcd_envia_byte
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _lcd_envia_byte *****************
 Defined at:
		line 53 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  n               1    2[BANK3 ] unsigned char 
 Auto vars:     Size  Location     Type
  address         1    4[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       1       0
      Locals:         0       0       0       1       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_lcd_envia_nibble
 This function is called by:
		_init_lcd_4bit
		_lcd_gotoxy
		_lcd_putc
		_LCDClear
 This function uses a non-reentrant model


 *************** function _lcd_envia_nibble *****************
 Defined at:
		line 39 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  n               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  n               1    1[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       1       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_init_lcd_4bit
		_lcd_envia_byte
 This function uses a non-reentrant model


 *************** function _ADCInit *****************
 Defined at:
		line 112 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_inicialize
 This function uses a non-reentrant model


 *************** function _ADCRead *****************
 Defined at:
		line 134 in file "main.c"
 Parameters:    Size  Location     Type
  ch              2    0[BANK3 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       2       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 232 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  recebido        1   67[BANK0 ] unsigned char 
  input2          3   73[BANK0 ] float 
  input           3   70[BANK0 ] float 
  pre             3   63[BANK0 ] float 
  preint          2   76[BANK0 ] int 
  status          2   68[BANK0 ] int 
  percentual      1   66[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
  bufferConver    1   62[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      16       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0      22       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_Ativar
		_Bomba
		_ProgressBar
		_USARTReceiveChar
		___awtoft
		___ftdiv
		___ftmul
		___fttol
		_ftoa
		_sendSerial
		i1_lcd_escreve_string
		i1_lcd_gotoxy
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _sendSerial *****************
 Defined at:
		line 204 in file "main.c"
 Parameters:    Size  Location     Type
  preint          2   50[BANK0 ] int 
  recipiente      2   52[BANK0 ] int 
 Auto vars:     Size  Location     Type
  origem         40    0[BANK1 ] unsigned char [40]
  x               2   44[BANK1 ] int 
  status          2   40[BANK1 ] int 
  nivelRecipie    1   43[BANK1 ] PTR const unsigned char 
		 -> ftoa@buf(17), 
  envio           1   42[BANK1 ] PTR const unsigned char 
		 -> sendSerial@origem(40), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       0      46       0       0
      Temps:          0       2       0       0       0
      Totals:         0       6      46       0       0
Total ram usage:       52 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_USARTWriteString
		___awtoft
		_ftoa
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ftoa *****************
 Defined at:
		line 6 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftoa.c"
 Parameters:    Size  Location     Type
  f               3   36[BANK0 ] float 
  status          1   39[BANK0 ] PTR int 
		 -> ISR@status(2), sendSerial@status(2), 
 Auto vars:     Size  Location     Type
  l               4   45[BANK0 ] unsigned long 
  rem             4   41[BANK0 ] unsigned long 
  cp              1   49[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
 Return value:  Size  Location     Type
                  1    wreg      PTR unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftge
		___ftmul
		___ftneg
		___ftsub
		___fttol
		___lltoft
		_sprintf
 This function is called by:
		_sendSerial
		_ISR
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> ftoa@buf(17), 
  f               1   10[BANK0 ] PTR const unsigned char 
		 -> STR_5(11), 
 Auto vars:     Size  Location     Type
  sp              1   30[BANK0 ] PTR unsigned char 
		 -> ftoa@buf(17), 
  _val            4   26[BANK0 ] struct .
  prec            2   33[BANK0 ] int 
  width           2   31[BANK0 ] int 
  c               1   35[BANK0 ] char 
  ap              1   25[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  flag            1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   10[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       9       0       0       0
      Locals:         0      12       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      26       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lldiv
		___llmod
		___wmul
		_isdigit
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMMON] unsigned int 
  multiplicand    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___llmod *****************
 Defined at:
		line 6 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\llmod.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] unsigned long 
  dividend        4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  counter         1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lldiv *****************
 Defined at:
		line 6 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[COMMON] unsigned long 
  dividend        4    4[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  quotient        4    9[COMMON] unsigned long 
  counter         1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         5       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:        14       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lltoft *****************
 Defined at:
		line 35 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lltoft.c"
 Parameters:    Size  Location     Type
  c               4    8[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  exp             1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   16[BANK0 ] float 
 Auto vars:     Size  Location     Type
  lval            4   25[BANK0 ] unsigned long 
  exp1            1   29[BANK0 ] unsigned char 
  sign1           1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   16[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftsub *****************
 Defined at:
		line 18 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftsub.c"
 Parameters:    Size  Location     Type
  f2              3    7[BANK0 ] float 
  f1              3   10[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    7[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___ftadd
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3    8[COMMON] float 
  f2              3   11[COMMON] float 
 Auto vars:     Size  Location     Type
  exp1            1    6[BANK0 ] unsigned char 
  exp2            1    5[BANK0 ] unsigned char 
  sign            1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       4       0       0       0
      Totals:         6       7       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		___ftsub
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMMON] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3    0[BANK0 ] float 
  f2              3    3[BANK0 ] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   11[BANK0 ] unsigned um
  sign            1   15[BANK0 ] unsigned char 
  cntr            1   14[BANK0 ] unsigned char 
  exp             1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_ISR
		_ftoa
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3    0[COMMON] float 
  ff2             3    3[COMMON] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          6       0       0       0       0
      Totals:        12       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ftoa
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2    8[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_sendSerial
		_ISR
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 49 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic\ftdiv.c"
 Parameters:    Size  Location     Type
  f2              3   16[BANK0 ] float 
  f1              3   19[BANK0 ] float 
 Auto vars:     Size  Location     Type
  f3              3   27[BANK0 ] float 
  sign            1   31[BANK0 ] unsigned char 
  exp             1   30[BANK0 ] unsigned char 
  cntr            1   26[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   16[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMMON] unsigned um
  exp             1    3[COMMON] unsigned char 
  sign            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         5       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___lltoft
 This function uses a non-reentrant model


 *************** function _USARTReceiveChar *****************
 Defined at:
		line 91 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  USARTData       1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_USARTWriteString
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ProgressBar *****************
 Defined at:
		line 182 in file "main.c"
 Parameters:    Size  Location     Type
  preint          2    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
  aux            16    6[BANK0 ] unsigned char [16]
  i               2   22[BANK0 ] int 
  result          1   24[BANK0 ] PTR unsigned char 
		 -> ProgressBar@aux(16), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0      19       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      25       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		i1_lcd_escreve_string
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_lcd_escreve_string *****************
 Defined at:
		line 168 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  y               2   12[COMMON] PTR const unsigned char 
		 -> ftoa@buf(17), STR_4(16), STR_3(2), STR_2(7), 
		 -> ProgressBar@aux(16), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		i1_lcd_putc
 This function is called by:
		_ProgressBar
		_ISR
 This function uses a non-reentrant model


 *************** function i1_lcd_putc *****************
 Defined at:
		line 82 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i1_lcd_envia_byte
		i1_lcd_gotoxy
 This function is called by:
		i1_lcd_escreve_string
 This function uses a non-reentrant model


 *************** function i1_lcd_gotoxy *****************
 Defined at:
		line 70 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    7[COMMON] unsigned char 
  lcd_gotoxy      1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_lcd_envia_byte
 This function is called by:
		_ISR
		i1_lcd_putc
 This function uses a non-reentrant model


 *************** function i1_lcd_envia_byte *****************
 Defined at:
		line 53 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  address         1    wreg     unsigned char 
  n               1    2[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  address         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_lcd_envia_nibble
 This function is called by:
		i1_lcd_gotoxy
		i1_lcd_putc
 This function uses a non-reentrant model


 *************** function i1_lcd_envia_nibble *****************
 Defined at:
		line 39 in file "lcd_4bit.c"
 Parameters:    Size  Location     Type
  n               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  n               1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_lcd_envia_byte
 This function uses a non-reentrant model


 *************** function _Bomba *****************
 Defined at:
		line 167 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Ativar
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _Ativar *****************
 Defined at:
		line 146 in file "main.c"
 Parameters:    Size  Location     Type
  comando         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  comando         1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_USARTWriteString
 This function is called by:
		_Bomba
		_ISR
 This function uses a non-reentrant model


 *************** function _USARTWriteString *****************
 Defined at:
		line 78 in file "main.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR const unsigned char 
		 -> ROM(8192), STR_1(40), 
 Auto vars:     Size  Location     Type
  str             1    2[COMMON] PTR const unsigned char 
		 -> ROM(8192), STR_1(40), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_USARTWriteChar
 This function is called by:
		_USARTReceiveChar
		_Ativar
		_sendSerial
 This function uses a non-reentrant model


 *************** function _USARTWriteChar *****************
 Defined at:
		line 69 in file "main.c"
 Parameters:    Size  Location     Type
  USARTData       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  USARTData       1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_USARTWriteString
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v1.32\sources\common\ftge.c
		___ftge        		CODE           	0DE9	0000	93

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftge.c estimated size: 93

C:\Program Files\Microchip\xc8\v1.32\sources\common\Umul16.c
		___wmul        		CODE           	0A98	0000	35

C:\Program Files\Microchip\xc8\v1.32\sources\common\Umul16.c estimated size: 35

C:\Program Files\Microchip\xc8\v1.32\sources\common\fttol.c
		___fttol       		CODE           	0F72	0000	142

C:\Program Files\Microchip\xc8\v1.32\sources\common\fttol.c estimated size: 142

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftadd.c
		___ftadd       		CODE           	03AB	0000	263

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftadd.c estimated size: 263

C:\Program Files\Microchip\xc8\v1.32\sources\common\lldiv.c
		___lldiv       		CODE           	0E46	0000	94

C:\Program Files\Microchip\xc8\v1.32\sources\common\lldiv.c estimated size: 94

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftneg.c
		___ftneg       		CODE           	095B	0000	8

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftneg.c estimated size: 8

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftsub.c
		___ftsub       		CODE           	09FD	0000	28

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftsub.c estimated size: 28

C:\Program Files\Microchip\xc8\v1.32\sources\common\float.c
		___ftpack      		CODE           	0F0A	0000	104

C:\Program Files\Microchip\xc8\v1.32\sources\common\float.c estimated size: 104

C:\Program Files\Microchip\xc8\v1.32\sources\common\awtoft.c
		___awtoft      		CODE           	0A54	0000	33

C:\Program Files\Microchip\xc8\v1.32\sources\common\awtoft.c estimated size: 33

C:\Program Files\Microchip\xc8\v1.32\sources\common\isdigit.c
		_isdigit       		CODE           	096B	0000	14

C:\Program Files\Microchip\xc8\v1.32\sources\common\isdigit.c estimated size: 14

shared
		_INFERIOR      		STRING         	083C	0000	2
		__stringtab    		STRING         	0800	0000	16
		__stringdata   		STRING         	0840	0000	76
		_dpowers       		STRING         	0810	0000	40
		i1_lcd_envia_by		CODE           	0AE0	0000	43
		_LCD_INIT_STRIN		STRING         	0838	0000	4
		i1_lcd_escreve_		CODE           	0A75	0000	35
		__initializatio		CODE           	0015	0000	23
		i1_lcd_envia_ni		CODE           	0BFB	0000	57
		i1_lcd_gotoxy  		CODE           	09C7	0000	26
		_SUPERIOR      		STRING         	083E	0000	2
		i1_lcd_putc    		CODE           	0C34	0000	59

shared estimated size: 383

C:\Program Files\Microchip\xc8\v1.32\sources\pic\ftdiv.c
		___ftdiv       		CODE           	063F	0000	184

C:\Program Files\Microchip\xc8\v1.32\sources\pic\ftdiv.c estimated size: 184

C:\Program Files\Microchip\xc8\v1.32\sources\common\doprnt.c
		_sprintf       		CODE           	0030	0000	572

C:\Program Files\Microchip\xc8\v1.32\sources\common\doprnt.c estimated size: 572

C:\Program Files\Microchip\xc8\v1.32\sources\common\lltoft.c
		___lltoft      		CODE           	0B0B	0000	43

C:\Program Files\Microchip\xc8\v1.32\sources\common\lltoft.c estimated size: 43

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftmul.c
		___ftmul       		CODE           	04B2	0000	211

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftmul.c estimated size: 211

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftoa.c
		_ftoa          		CODE           	0585	0000	186

C:\Program Files\Microchip\xc8\v1.32\sources\common\ftoa.c estimated size: 186

lcd_4bit.c
		_LCDClear      		CODE           	0C6F	0000	64
		_lcd_putc      		CODE           	0CAF	0000	71
		_lcd_envia_nibb		CODE           	0D90	0000	89
		_lcd_escreve_st		CODE           	0B62	0000	49
		_lcd_envia_byte		CODE           	0BC6	0000	53
		_lcd_gotoxy    		CODE           	0A19	0000	28
		_init_lcd_4bit 		CODE           	0EA4	0000	102

lcd_4bit.c estimated size: 456

C:\Program Files\Microchip\xc8\v1.32\sources\common\llmod.c
		___llmod       		CODE           	0D42	0000	78

C:\Program Files\Microchip\xc8\v1.32\sources\common\llmod.c estimated size: 78

main.c
		_reset         		CODE           	07F7	0000	9
		_ISR           		CODE           	026C	0000	319
		_ADCInit       		CODE           	099C	0000	19
		_sendSerial    		CODE           	06F7	0000	142
		_main          		CODE           	0B36	0000	44
		_inicialize    		CODE           	0785	0000	114
		_ProgressBar   		CODE           	0CF6	0000	76
		_USARTWriteStri		CODE           	09E1	0000	28
		_USARTWriteChar		CODE           	0953	0000	8
		_ADCRead       		CODE           	0A35	0000	31
		_Ativar        		CODE           	0B93	0000	51
		_USARTReceiveCh		CODE           	09AF	0000	24
		_Bomba         		CODE           	0ABB	0000	37

main.c estimated size: 902

